// Prisma schema for AI Scrum Master

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int        @id @default(autoincrement())
  name        String
  email       String     @unique
  standups    Standup[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Standup {
  id          Int        @id @default(autoincrement())
  userId      Int
  summary     String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  user        User       @relation(fields: [userId], references: [id])
  sprint      Sprint?    @relation("SprintStandups", fields: [sprintId], references: [id])
  sprintId    Int?
  blockers    Blocker[]  @relation("StandupBlockers")
}

model Blocker {
  id          Int      @id @default(autoincrement())
  standupId   Int
  type        String   // "dependency", "technical", "resource", "external"
  severity    String   // "low", "medium", "high", "critical"
  description String
  status      String   // "active", "resolved", "escalated"
  detectedAt  DateTime @default(now())
  resolvedAt  DateTime?
  
  standup     Standup  @relation("StandupBlockers", fields: [standupId], references: [id])
}

model Sprint {
  id          Int           @id @default(autoincrement())
  name        String
  startDate   DateTime
  endDate     DateTime
  standups    Standup[]     @relation("SprintStandups")
  backlogItems BacklogItem[]
}

model BacklogItem {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean  @default(false)
  sprintId    Int?
  sprint      Sprint?  @relation(fields: [sprintId], references: [id])
}

